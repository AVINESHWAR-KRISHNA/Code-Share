version: "3.7"
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always

    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-enterprise-kafka:latest
    restart: always

    depends_on:
      - zookeeper

    ports:
      - 29092:29092

    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

    volumes:
      - kafka-data:/var/lib/kafka/data

  debezium:
    image: debezium/connect:2.6.1.Final
    restart: always

    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      DATABASE_HISTORY: io.debezium.relational.history.KafkaDatabaseHistory
      DATABASE_HISTORY_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      DATABASE_HISTORY_TOPIC: debezium_history
    depends_on: 
      - kafka
    ports:
      - 8083:8083
    volumes:
      - debezium-data:/debezium/data
    #   - ./path_to_jdbc_jar_directory:/kafka/connect/jdbc/sqljdbc_8.4/enu
    # env_file:
    #   - ./sql_server_config.env

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    restart: always

    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081,http://localhost:8081
      SCHEMA_REGISTRY_GROUP_ID: 1
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: backward

    ports:
      - 8081:8081

    depends_on: [zookeeper, kafka]

    volumes:
      - schema-registry-data:/var/lib/schema-registry/data

  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    restart: always

    ports:
      - "9000:9000"

    depends_on:
      - zookeeper
      - kafka

    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"

    command: -Dpidfile.path=/dev/null
    
volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  debezium-data:
  schema-registry-data:

#docker-compose -f zookeeper-kafka.yml up -d
#docker ps  
#docker exec -it docker-workspace-kafka-1 bash
#kafka-topics --create --topic test-topic --bootstrap-server localhost:9092 --partitions 10 --replication-factor 1
#kafka-topics --list --bootstrap-server localhost:9092
#kafka-console-producer --broker-list localhost:9092 --topic test-topic
#kafka-console-consumer --bootstrap-server localhost:9092 --topic test-topic --from-beginning --partition 0
#kafka-topics --delete --topic test-topic --bootstrap-server localhost:9092


#docker network ls
#docker inspect docker-workspace-kafka-1 | grep IPAddress